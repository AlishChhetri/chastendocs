[
  {
    "objectID": "videos.html",
    "href": "videos.html",
    "title": "Chasten Videos",
    "section": "",
    "text": "Issue #36: Create a Video that Shows how Chasten Analyzes a Codebase\nTODO: Add a video here"
  },
  {
    "objectID": "videos.html#issue-36",
    "href": "videos.html#issue-36",
    "title": "Chasten Videos",
    "section": "",
    "text": "Issue #36: Create a Video that Shows how Chasten Analyzes a Codebase\nTODO: Add a video here"
  },
  {
    "objectID": "videos.html#issue-37",
    "href": "videos.html#issue-37",
    "title": "Chasten Videos",
    "section": "Issue 37",
    "text": "Issue 37\nIssue #37: Create a Video that Shows How to Use Chasten’s Datasette to Analyze Data\nTODO: Add a video here\n\nFiller video (inspired by OBC):"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "chastenwiki.html#introduction",
    "href": "chastenwiki.html#introduction",
    "title": "README",
    "section": "🎉 Introduction",
    "text": "🎉 Introduction\n\nChasten is a Python program that uses XPath expressions to find patterns in the abstract syntax tree (AST) of a Python program. You can use Chasten to quickly implement your own configurable linting rules, without having to use a complex AST analysis framework or resorting to imprecise regular expressions.\nDo you want to ensure that a Python program has does not have any triple-nested for loops inside of async functions? Or, do you want to confirm that every function inside your Python program has type annotations and a docstring comment? Chasten can help! It allows you to express these checks — and many other types of analyses as well — in simple YAML files that contain XPath expressions."
  },
  {
    "objectID": "chastenwiki.html#definitions",
    "href": "chastenwiki.html#definitions",
    "title": "README",
    "section": "😂 Definitions",
    "text": "😂 Definitions\n\nchasten (transitive verb) “to make someone aware of failure or of having done something wrong”, Cambridge Dictionary.\n\nExample Sentence: “Her remarks are a gift to me even as they chasten and redirect my efforts to expand the arguments of this book into a larger one.”, Cambridge English Corpus\n\nchasten (uncountable or singular noun) “a tool that analyzes the abstract syntax tree of a Python program to detect potential sources of programmer mistakes so as to prevent program failure”, AstuteSource Developers.\n\nStudent Sentence: “I’m glad that chasten reminded me to add docstrings and type annotations to all of the functions in main.py. It was easy to see what to fix!”\nInstructor Sentence: “chasten makes it easy for me to reliably confirm that student programs have the required coding constructs. It’s much better than using regular expressions!”\nDeveloper Sentence: “Since I was already familiar with XPath expressions, chasten made it fun and easy for me to do an automate analysis of a Python codebase that I maintain.”\nResearcher Sentence: “In addition to helping me quickly scan the source code of Python projects, chasten’s analysis dashboard lets me effectively explore the data I collect.”"
  },
  {
    "objectID": "chastenwiki.html#features",
    "href": "chastenwiki.html#features",
    "title": "README",
    "section": "🔋Features",
    "text": "🔋Features\n\n✨ Easy-to-configure, automated analysis of a Python program’s abstract syntax tree\n📃 Flexible and easy-to-use YAML-based configuration file for describing analyses and checks\n🪂 Automated generation and verification of the YAML configuration files for an analysis\n🚀 Configurable saving of analysis results in the JSON, CSV, or SQLite formats\n🚧 Automated integration of result files that arise from multiple runs of the tool\n🌄 Interactive results analysis through the use of a locally running datasette server\n🌎 Automated deployment of a datasette server on platforms like Fly or Vercel\n🦚 Detailed console and syslog logging to furnish insights into the tool’s behavior\n💠 Rich command-line interface with robust verification of arguments and options\n🤯 Interactive command-line generation through an easy-to-use terminal user interface"
  },
  {
    "objectID": "chastenwiki.html#requirements",
    "href": "chastenwiki.html#requirements",
    "title": "README",
    "section": "⚡️ Requirements",
    "text": "⚡️ Requirements\n\nPython 3.11\nChasten leverages numerous Python packages, including notable ones such as:\n\nDatasette: Interactive data analysis dashboards\nPyastgrep: XPath-based analysis of a Python program’s AST\nPydantic: Automated generation and validation of configuration files\nRich: Full-featured formatting and display of text in the terminal\nTrogon: Automated generation of terminal user interfaces for a command-line tool\nTyper: Easy-to-implement and fun-to-use command-line interfaces\n\nThe developers of Chasten use Poetry for packaging and dependency management"
  },
  {
    "objectID": "chastenwiki.html#installation",
    "href": "chastenwiki.html#installation",
    "title": "README",
    "section": "🔽 Installation",
    "text": "🔽 Installation\nFollow these steps to install the chasten program:\n\nInstall Python 3.11 for your operating system\nInstall pipx to support program installation in isolated environments\nType pipx install chasten to install Chasten\nType pipx list and confirm that Chasten is installed\nType chasten --help to learn how to use the tool"
  },
  {
    "objectID": "chastenwiki.html#configuration",
    "href": "chastenwiki.html#configuration",
    "title": "README",
    "section": "🪂 Configuration",
    "text": "🪂 Configuration\nYou can configure chasten with two YAML files, normally called config.yml and checks.yml. Although chasten can generate a starting configuration, you can check out the 📦 AstuteSource/chasten-configuration repository for example(s) of configuration files that setup the tool. Although the config.yml file can reference multiple check configuration files, this example shows how to specify a single checks.yml file:\n# chasten configuration\nchasten:\n  # point to a single checks file\n  checks-file:\n    - checks.yml\nThe checks.yml file must contain one or more checks. What follows is an example of a check configuration file with two checks that respectively find the first executable line of non-test and test-case functions in a Python project. Note that the pattern attribute specifies the XPath version 2.0 expression that chasten will use to detect the specified type of Python function. You can type chasten configure validate --config &lt;path to chasten-configuration/ directory&gt; after filling in &lt;path to chasten-configuration&gt; with the fully-qualified name of your configuration directory and the tool will confirm that your configuration meets the tool’s specification. You can also use the command chasten configure create command to automatically generate a starting configuration! Typing chasten configure --help will explain how to configure the tool.\nchecks:\n  - name: \"all-non-test-function-definition\"\n    code: \"FUNC\"\n    id: \"FUNC001\"\n    description: \"First executable line of a non-test function, skipping over docstrings and/or comments\"\n    pattern: '//FunctionDef[not(contains(@name, \"test_\"))]/body/Expr[value/Constant]/following-sibling::*[1] | //FunctionDef[not(contains(@name, \"test_\"))]/body[not(Expr/value/Constant)]/*[1]'\n  - name: \"all-test-function-definition\"\n    code: \"FUNC\"\n    id: \"FUNC002\"\n    description: \"First executable line of a test function, skipping over docstrings and/or comments\"\n    pattern: '//FunctionDef[starts-with(@name, \"test_\")]/body/Expr[value/Constant]/following-sibling::*[1] | //AsyncFunctionDef[starts-with(@name, \"test_\")]/body/Expr[value/Constant]/following-sibling::*[1] | //FunctionDef[starts-with(@name, \"test_\")]/body[not(Expr/value/Constant)]/*[1] | //AsyncFunctionDef[starts-with(@name, \"test_\")]/body[not(Expr/value/Constant)]/*[1]'\n    count:\n      min: 1\n      max: 10"
  },
  {
    "objectID": "chastenwiki.html#analysis",
    "href": "chastenwiki.html#analysis",
    "title": "README",
    "section": "✨ Analysis",
    "text": "✨ Analysis\nSince chasten needs a project with Python source code as the input to its analysis sub-command, you can clone the 📦 AstuteSource/lazytracker and 📦 AstuteSource/multicounter repositories that are forks of existing Python projects created for convenient analysis. To incrementally analyze these two projects with chasten, you can type the following commands to produce a results JSON file for each project:\n\nAfter creating a subject-data/ directory that contains a lazytracker/ directory, you can run the chasten analyze command for the lazytracker program:\n\nchasten analyze lazytracker \\\n        --config &lt;path to the chasten-configuration/ directory&gt; \\\n        --search-path &lt;path to the lazytracker/ directory&gt; \\\n        --save-directory &lt;path to the subject-data/lazytracker/ directory&gt; \\\n        --save\n\nNow you can scan the output to confirm that, for instance, chasten finds 6 test functions in the lazytracker project. If you look in the subject-data/lazytracker directory you will find a JSON file with a name like chasten-results-lazytracker-20230823162341-4c23fc443a6b4c4aa09886f1ecb96e9f.json. Running chasten on this program more than once will produce a new results file with a different timestamp (i.e., 20230823162341) and unique identifier (i.e., 4c23fc443a6b4c4aa09886f1ecb96e9f) in its name, thus ensuring that you do not accidentally write over your prior results when using --save.\nAfter creating a multicounter/ directory in the existing subject-data/ directory, you can run the chasten analyze command for the multicounter program:\n\nchasten analyze multicounter \\\n        --config &lt;path to the chasten-configuration/ directory&gt; \\\n        --search-path &lt;path to the multicounter/ directory&gt; \\\n        --save-directory &lt;path to the subject-data/lazytracker/ directory&gt; \\\n        --save\n\nNow you can scan the output to confirm that, as an example, chasten finds 10 test functions in the multicounter project. If you look in the subject-data/lazytracker directory you will find a JSON file with a name like chasten-results-multicounter-20230821171712-5c52f2f1b61b4cce97624cc34cb39d4f.json and name components that are similar to the JSON file created for the multicounter program.\nSince the all-test-function-definition check specifies that the program must have between 1 and 10 tests you will notice that this check passes for both lazytracker and multicounter. This means that chasten returns a 0 error code to communicate to your operating system that the check passed.\nYou can learn more about how to use the analyze sub-command by typing chasten analyze --help. For instance, chasten supports the --check-include and --check-exclude options that allow you to respectively include and exclude specific checks according to fuzzy matching rules that you can specify for any of a check’s attributes specified in the checks.yml file."
  },
  {
    "objectID": "chastenwiki.html#integration",
    "href": "chastenwiki.html#integration",
    "title": "README",
    "section": "🚧 Integration",
    "text": "🚧 Integration\nAfter running chasten on the lazytracker and multicounter programs you can integrate their individual JSON files into a single JSON file, related CSV files, and a SQLite database. Once you have made an integrated-data/ directory, you can type this command to perform the integration:\nchasten integrate all-programs \\\n        &lt;path to subject-data&gt;/**/*.json \\\n        --save-directory &lt;path to the integrated-data/ directory&gt;\nThis command will produce a directory like chasten-flattened-csvs-sqlite-db-all-programs-20230823171016-2061b524276b4299b04359ba30452923/ that contains a SQLite database called chasten.db and a csv/ directory with CSV files that correspond to each of the tables inside of the database.\nYou can learn more about the integrate sub-command by typing chasten integrate --help."
  },
  {
    "objectID": "chastenwiki.html#results",
    "href": "chastenwiki.html#results",
    "title": "README",
    "section": "🌄 Results",
    "text": "🌄 Results\nIf you want to create an interactive analysis dashboard that uses 📦 simonw/datasette you can run chasten datasette-serve &lt;path containing integrated results&gt;/chasten.db --port 8001. Now you can use the dashboard in your web browser to analyze the results while you study the source code for these projects with your editor! Examining the results will reveal that chasten, through its use of 📦 spookylukey/pyastgrep, correctly uses the XPath expression for all-test-function-definition to find the first line of executable source code inside of each test, skipping over a function’s docstring and leading comments.\nFor the lazytracker program you will notice that chasten reports that there are 6 test cases even though pytest only finds and runs 5 tests. This is due to the fact that tests/test_tracked.py test suite in lazytracker contains a function starting with test_ inside of another function starting with test_. This example illustrates the limitations of static analysis with chasten! Even though the tool correctly detected all of the “test functions”, the nesting of the functions in the test suite means that pytest will run the outer test_ function and use the inner test_ function for testing purposes.\nWith that said, chasten correctly finds each of the tests for the multicounter project. You can follow each of the previous steps in this document to apply chasten to your own Python program!"
  },
  {
    "objectID": "chastenwiki.html#deployment",
    "href": "chastenwiki.html#deployment",
    "title": "README",
    "section": "🌎 Deployment",
    "text": "🌎 Deployment\nIf you want to make your chasten.db publicly available for everyone to study, you can use the chasten datasette-publish sub-command. As long as you have followed the installation instructions for 📦 simonw/datasette-publish-fly and 📦 simonw/datasette-publish-vercel, you can use the plugins to deploy a public datasette server that hosts your chasten.db. For instance, running the command chasten datasette-publish &lt;path containing integrated results&gt;/chasten.db --platform vercel will publish the results from running chasten on lazytracker and multicounter to the Vercel platform.\nImportantly, the use of the chasten datasette-publish command with the --platform vercel option requires you to have previously followed the instructions for the datasette-publish-vercel plugin to install the vercel command-line tool. This is necessary because, although datasette-publish-vercel is one of chasten’s dependencies neither chasten nor datasette-publish-vercel provide the vercel tool even though they use it. You must take similar steps before publishing your database to Fly!"
  },
  {
    "objectID": "chastenwiki.html#interaction",
    "href": "chastenwiki.html#interaction",
    "title": "README",
    "section": "🤯 Interaction",
    "text": "🤯 Interaction\nEven though chasten is a command-line application, you create interactively create the tool’s command-line arguments and options through a terminal user interface (TUI). To use TUI-based way to create a complete command-line for chasten you can type the command chasten interact."
  },
  {
    "objectID": "chastenwiki.html#learning",
    "href": "chastenwiki.html#learning",
    "title": "README",
    "section": "🤗 Learning",
    "text": "🤗 Learning\n\nCurious about the nodes that are available in a Python program’s AST?\n\nAbstract Syntax Tree documentation introduces the nodes of a Python AST\nGreen Tea Snakes provides the “missing Python AST docs”\nTextual AST View provides a terminal-based tool for browsing a Python program’s AST\n\nWant to learn more about how to write XPath expressions for a Python AST?\n\nPyastgrep offers examples of XPath expressions for querying a Python program’s AST\nXPath Documentation describes how to write XPath expressions\nXPath Axes summaries the ways that XPath axes relate a note to other nodes\n\nInterested in exploring other approaches to querying source code?\n\nsrcML supports XPath-based querying of programs implemented in C, C#, C++, and Java\nTreesitter provides a general-purpose approach to modelling and querying source code\nPython Treesitter offers a Python language bindings for to parsing and querying with Treesitter"
  },
  {
    "objectID": "chastenwiki.html#improvement",
    "href": "chastenwiki.html#improvement",
    "title": "README",
    "section": "🧗Improvement",
    "text": "🧗Improvement\n\nFound a bug or have a feature that the development team should implement? Raise an issue!\nInteresting in learning more about tool usage details? Check the wiki!\nWant to discuss ways to use the tool? Participate in discussions!"
  },
  {
    "objectID": "devlogs.html",
    "href": "devlogs.html",
    "title": "DevLogs",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSeptember 19, 2023\n\n\nHarlow Malloc\n\n\n1 min\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nSeptember 16, 2023\n\n\nTristan O’Malley\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "team.html",
    "href": "team.html",
    "title": "Meet the Team",
    "section": "",
    "text": "Meet the Developers behind Chasten!"
  },
  {
    "objectID": "devlog2.html",
    "href": "devlog2.html",
    "title": "Issues",
    "section": "",
    "text": "Let’s hop on over to our Issue Tracker and squash some bugs together! 🐞💪"
  },
  {
    "objectID": "issues.html",
    "href": "issues.html",
    "title": "Issues",
    "section": "",
    "text": "Let’s hop on over to our Issue Tracker and squash some bugs together! 🐞💪"
  },
  {
    "objectID": "policies.html",
    "href": "policies.html",
    "title": "Join the Team",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nBug Report Template\n\n\n\n\n\n\n\npolicy\n\n\ncontribute\n\n\n\n\n How to structure a bug report\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n1 min\n\n\n\n\n\n\n\n\nCode of Conduct\n\n\n\n\n\n\n\npolicy\n\n\ncode of conduct\n\n\n\n\n All members of the Chasten Dev team must uphold the code of conduct\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n4 min\n\n\n\n\n\n\n\n\nContributing\n\n\n\n\n\n\n\npolicy\n\n\ncontribute\n\n\n\n\n How to contribute to Chasten\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n3 min\n\n\n\n\n\n\n\n\nFeature Request Template\n\n\n\n\n\n\n\npolicy\n\n\ncontribute\n\n\n\n\n How to structure a Feature Request\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n1 min\n\n\n\n\n\n\n\n\nLicence\n\n\n\n\n\n\n\nlicence\n\n\n\n\n Licence for Chasten\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n16 min\n\n\n\n\n\n\n\n\nPull Request Template\n\n\n\n\n\n\n\npolicy\n\n\ncontribute\n\n\n\n\n How to structure a pull request\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n1 min\n\n\n\n\n\n\n\n\nSecurity\n\n\n\n\n\n\n\npolicy\n\n\nsecurity\n\n\n\n\n Keeping Chasten Secure\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n1 min\n\n\n\n\n\n\n\n\nTeam Policies\n\n\n\n\n\n\n\npolicy\n\n\n\n\n Policies upheld by members of the Chasten team\n\n\n\n\n\n\nSeptember 26, 2023\n\n\nChasten Dev Team\n\n\n2 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Team Policies",
    "section": "",
    "text": "Blog posts for the Developer Development website will be created by a committee of three people. Committees will be assigned for the week on Mondays at 9:35am.\nThe committees will be expected to have final/working drafts by 9:00pm on Sundays for the post reviewed on Monday, and at 9:00pm on Tuesday for the post reviewed on Wednesday. Because of this, individual team members are expected to complete their first professional precis of the week by Wednesdays 9:00am, and the second by Fridays at 9:00am.\nCommittees are encouraged to seek help from the team at large if they feel that they cannot complete their work on time. They are encouraged to do so at least nine hours prior to their deadline.\nFailure to meet the goals necessitates that one or more committee members must write an incident report, to be published as a blog post, and must within 24 hours of that initial deadline have something to show for their work. In 48 hours, it must be complete.\nIncident reports must consist of a review of the cause of the issue, the issue itself, and how to resolve/prevent the issue from occuring again.\nPull requests to the team’s project require three reviewers before they can be merged. This should be done within a week of a pull request leaving the ‘draft’ state.\nWe have assigned Policy and Schedule Maintainers, who will be in charge of updating their corresponding responsibilitiees weekly and/or as needed.\nAt minimum, five issues in the Chasten repository must be worked on per week. Ideally, ten to twelve will see progress, if not total completion."
  },
  {
    "objectID": "posts/post-with-code/index.html#policies-for-work-completion-on-chasten-project",
    "href": "posts/post-with-code/index.html#policies-for-work-completion-on-chasten-project",
    "title": "Team Policies",
    "section": "",
    "text": "Blog posts for the Developer Development website will be created by a committee of three people. Committees will be assigned for the week on Mondays at 9:35am.\nThe committees will be expected to have final/working drafts by 9:00pm on Sundays for the post reviewed on Monday, and at 9:00pm on Tuesday for the post reviewed on Wednesday. Because of this, individual team members are expected to complete their first professional precis of the week by Wednesdays 9:00am, and the second by Fridays at 9:00am.\nCommittees are encouraged to seek help from the team at large if they feel that they cannot complete their work on time. They are encouraged to do so at least nine hours prior to their deadline.\nFailure to meet the goals necessitates that one or more committee members must write an incident report, to be published as a blog post, and must within 24 hours of that initial deadline have something to show for their work. In 48 hours, it must be complete.\nIncident reports must consist of a review of the cause of the issue, the issue itself, and how to resolve/prevent the issue from occuring again.\nPull requests to the team’s project require three reviewers before they can be merged. This should be done within a week of a pull request leaving the ‘draft’ state.\nWe have assigned Policy and Schedule Maintainers, who will be in charge of updating their corresponding responsibilitiees weekly and/or as needed.\nAt minimum, five issues in the Chasten repository must be worked on per week. Ideally, ten to twelve will see progress, if not total completion."
  },
  {
    "objectID": "posts/code_of_conduct/index.html",
    "href": "posts/code_of_conduct/index.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at . All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#our-pledge",
    "href": "posts/code_of_conduct/index.html#our-pledge",
    "title": "Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#our-standards",
    "href": "posts/code_of_conduct/index.html#our-standards",
    "title": "Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting"
  },
  {
    "objectID": "posts/code_of_conduct/index.html#enforcement-responsibilities",
    "href": "posts/code_of_conduct/index.html#enforcement-responsibilities",
    "title": "Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#scope",
    "href": "posts/code_of_conduct/index.html#scope",
    "title": "Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#enforcement",
    "href": "posts/code_of_conduct/index.html#enforcement",
    "title": "Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at . All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#enforcement-guidelines",
    "href": "posts/code_of_conduct/index.html#enforcement-guidelines",
    "title": "Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "posts/code_of_conduct/index.html#attribution",
    "href": "posts/code_of_conduct/index.html#attribution",
    "title": "Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "posts/team-policies/index.html",
    "href": "posts/team-policies/index.html",
    "title": "Team Policies",
    "section": "",
    "text": "Blog posts for the Developer Development website will be created by a committee of three people. Committees will be assigned for the week on Mondays at 9:35am.\nThe committees will be expected to have final/working drafts by 9:00pm on Sundays for the post reviewed on Monday, and at 9:00pm on Tuesday for the post reviewed on Wednesday. Because of this, individual team members are expected to complete their first professional precis of the week by Wednesdays 9:00am, and the second by Fridays at 9:00am.\nCommittees are encouraged to seek help from the team at large if they feel that they cannot complete their work on time. They are encouraged to do so at least nine hours prior to their deadline.\nFailure to meet the goals necessitates that one or more committee members must write an incident report, to be published as a blog post, and must within 24 hours of that initial deadline have something to show for their work. In 48 hours, it must be complete.\nIncident reports must consist of a review of the cause of the issue, the issue itself, and how to resolve/prevent the issue from occuring again.\nPull requests to the team’s project require three reviewers before they can be merged. This should be done within a week of a pull request leaving the ‘draft’ state.\nWe have assigned Policy and Schedule Maintainers, who will be in charge of updating their corresponding responsibilitiees weekly and/or as needed.\nAt minimum, five issues in the Chasten repository must be worked on per week. Ideally, ten to twelve will see progress, if not total completion."
  },
  {
    "objectID": "posts/team-policies/index.html#policies-for-work-completion-on-chasten-project",
    "href": "posts/team-policies/index.html#policies-for-work-completion-on-chasten-project",
    "title": "Team Policies",
    "section": "",
    "text": "Blog posts for the Developer Development website will be created by a committee of three people. Committees will be assigned for the week on Mondays at 9:35am.\nThe committees will be expected to have final/working drafts by 9:00pm on Sundays for the post reviewed on Monday, and at 9:00pm on Tuesday for the post reviewed on Wednesday. Because of this, individual team members are expected to complete their first professional precis of the week by Wednesdays 9:00am, and the second by Fridays at 9:00am.\nCommittees are encouraged to seek help from the team at large if they feel that they cannot complete their work on time. They are encouraged to do so at least nine hours prior to their deadline.\nFailure to meet the goals necessitates that one or more committee members must write an incident report, to be published as a blog post, and must within 24 hours of that initial deadline have something to show for their work. In 48 hours, it must be complete.\nIncident reports must consist of a review of the cause of the issue, the issue itself, and how to resolve/prevent the issue from occuring again.\nPull requests to the team’s project require three reviewers before they can be merged. This should be done within a week of a pull request leaving the ‘draft’ state.\nWe have assigned Policy and Schedule Maintainers, who will be in charge of updating their corresponding responsibilitiees weekly and/or as needed.\nAt minimum, five issues in the Chasten repository must be worked on per week. Ideally, ten to twelve will see progress, if not total completion."
  },
  {
    "objectID": "posts/licence/index.html",
    "href": "posts/licence/index.html",
    "title": "Licence",
    "section": "",
    "text": "GNU GENERAL PUBLIC LICENSE\n                   Version 2, June 1991\nCopyright (C) 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n                        Preamble\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software–to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation’s software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\nAlso, for each author’s protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors’ reputations.\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone’s free use or not licensed at all.\nThe precise terms and conditions for copying, distribution and modification follow.\n                GNU GENERAL PUBLIC LICENSE\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\nThis License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The “Program”, below, refers to any such program or work, and a “work based on the Program” means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term “modification”.) Each licensee is addressed as “you”.\n\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n\nYou may copy and distribute verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n\nYou may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n\na) You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\n\nb) You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any\npart thereof, to be licensed as a whole at no charge to all third\nparties under the terms of this License.\n\nc) If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such\ninteractive use in the most ordinary way, to print or display an\nannouncement including an appropriate copyright notice and a\nnotice that there is no warranty (or else, saying that you provide\na warranty) and that users may redistribute the program under\nthese conditions, and telling the user how to view a copy of this\nLicense.  (Exception: if the Program itself is interactive but\ndoes not normally print such an announcement, your work based on\nthe Program is not required to print an announcement.)\nThese requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n\nYou may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n\na) Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections\n1 and 2 above on a medium customarily used for software interchange; or,\n\nb) Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your\ncost of physically performing source distribution, a complete\nmachine-readable copy of the corresponding source code, to be\ndistributed under the terms of Sections 1 and 2 above on a medium\ncustomarily used for software interchange; or,\n\nc) Accompany it with the information you received as to the offer\nto distribute corresponding source code.  (This alternative is\nallowed only for noncommercial distribution and only if you\nreceived the program in object code or executable form with such\nan offer, in accord with Subsection b above.)\nThe source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n\nYou may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\nYou are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\nEach time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients’ exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\nIf, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n\nIf the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\nThe Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and “any later version”, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n\nIf you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n                  NO WARRANTY\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\nAlso add information on how to contact you by electronic and paper mail.\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:\nGnomovision version 69, Copyright (C) year name of author\nGnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\nThe hypothetical commands show w' andshow c’ should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than show w' andshow c’; they could even be mouse-clicks or menu items–whatever suits your program.\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a “copyright disclaimer” for the program, if necessary. Here is a sample; alter the names:\nYoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision’ (which makes passes at compilers) written by James Hacker.\n, 1 April 1989 Ty Coon, President of Vice\nThis General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License."
  },
  {
    "objectID": "posts/contributing/index.html",
    "href": "posts/contributing/index.html",
    "title": "Contributing",
    "section": "",
    "text": "In this guide you will get an overview of how you can contribute to this project.\nWhen contributing to this repository, please first discuss the changes you wish to make via an issue and/or pull request with the owners of this repository.\nPlease note we have a Code of Conduct, please follow it in all your interactions with the project.\nTo get an overview of the project, read the README.\n\n\nIf you find a problem with our program, scan through our existing issues first to see if we are already aware of and working on the issue. If it is an issue that hasn’t been addressed before, you can open a new issue using our bug report issue template.\nEven if you have not found a problem you are still welcome to contribute. Look through our existing issues and find something that you would like to work on!\nHave a feature you think should be implemented? Use our feature request template to let us know!\n\n\nUse our bug report issue template when creating a new issue. Be as clear as possible about what exactly the problem is. Explain how you came to encounter this error. Include any relevent code segment, screen shots, error messages, etc. People will not be able to effectivly help solve the problem without all of the information. Learn about creating issues here.\n\n\n\nIf the issue already exists, share any helpful information that you have gained with the other people working on the issue. Be sure to read over the previous disscusions, as to provide your best possible contributions. Any new information could bring us one step closer to solving an issue!\n\n\n\n\nAny changes being made to our program must first be done in a branch or fork. Once you (and your fellow contributors) are done making changes, you may create a pull request (PR) to the main repository.\n\n\nBranches are one of the possible features of GitHub that you could use to make changes to our project. Learn about branches here.\n\n\n\nAnother feature of GitHub that you could use to make changes to our project are forks. Learn about forks here.\n\n\n\nOnce all your changes are made and you are confident it works, you can create a pull request using our pull request template. Please include proof of success on all three operating systems (Windows, MacOS, and Linux). A commitee of reviewers will look over the contents of the PR to ensure the accuracy of the changes and that you adhered to our standards.\nLearn about pull requests here."
  },
  {
    "objectID": "posts/contributing/index.html#issues",
    "href": "posts/contributing/index.html#issues",
    "title": "Contributing",
    "section": "",
    "text": "If you find a problem with our program, scan through our existing issues first to see if we are already aware of and working on the issue. If it is an issue that hasn’t been addressed before, you can open a new issue using our bug report issue template.\nEven if you have not found a problem you are still welcome to contribute. Look through our existing issues and find something that you would like to work on!\nHave a feature you think should be implemented? Use our feature request template to let us know!\n\n\nUse our bug report issue template when creating a new issue. Be as clear as possible about what exactly the problem is. Explain how you came to encounter this error. Include any relevent code segment, screen shots, error messages, etc. People will not be able to effectivly help solve the problem without all of the information. Learn about creating issues here.\n\n\n\nIf the issue already exists, share any helpful information that you have gained with the other people working on the issue. Be sure to read over the previous disscusions, as to provide your best possible contributions. Any new information could bring us one step closer to solving an issue!"
  },
  {
    "objectID": "posts/contributing/index.html#making-changes",
    "href": "posts/contributing/index.html#making-changes",
    "title": "Contributing",
    "section": "",
    "text": "Any changes being made to our program must first be done in a branch or fork. Once you (and your fellow contributors) are done making changes, you may create a pull request (PR) to the main repository.\n\n\nBranches are one of the possible features of GitHub that you could use to make changes to our project. Learn about branches here.\n\n\n\nAnother feature of GitHub that you could use to make changes to our project are forks. Learn about forks here.\n\n\n\nOnce all your changes are made and you are confident it works, you can create a pull request using our pull request template. Please include proof of success on all three operating systems (Windows, MacOS, and Linux). A commitee of reviewers will look over the contents of the PR to ensure the accuracy of the changes and that you adhered to our standards.\nLearn about pull requests here."
  },
  {
    "objectID": "posts/pull_request_template/index.html",
    "href": "posts/pull_request_template/index.html",
    "title": "Pull Request Template",
    "section": "",
    "text": "When creating a pull request to add a new feature or alter an existing one, there are some important elements to include to help our team review and process it more efficiently.\n\nMake sure the title is descriptive of what the PR includes. Don’t mention issue names/numbers; save that for the description.\nList the names of those who contributed to the project.\nLink the issue the pull request is meant to fix/resolve.\nDescribe the contents and goal of the pull request.\nWill coverge be maintained/increased?\nWhat operating systems has this been tested on? How were these tests conducted?\nInclude a code block and/or screenshots displaying the functionality of your feature, if applicable/possible.\n\nMark as a draft until it is ready to begin the reviewing process, then tag our Lead Software Architect, Lauren Nevill, our Principal Software Engineer, Bergas Batara, and our Founding Engineer, Gregory Kapfhammer when you mark it as ready for review."
  },
  {
    "objectID": "posts/security/index.html",
    "href": "posts/security/index.html",
    "title": "Security",
    "section": "",
    "text": "Current security updates being addedfor:\n\n\n\nVersion\nSupported\n\n\n\n\n1.1.x\n:white_check_mark:\n\n\n\n\n\n\nPlease report any vulnerabilities as bugs, and explain in the issue what the vulnerability is. Updates will be given as we assign team members to work on the issue and they make progress on it."
  },
  {
    "objectID": "posts/security/index.html#supported-versions",
    "href": "posts/security/index.html#supported-versions",
    "title": "Security",
    "section": "",
    "text": "Current security updates being addedfor:\n\n\n\nVersion\nSupported\n\n\n\n\n1.1.x\n:white_check_mark:"
  },
  {
    "objectID": "posts/security/index.html#reporting-a-vulnerability",
    "href": "posts/security/index.html#reporting-a-vulnerability",
    "title": "Security",
    "section": "",
    "text": "Please report any vulnerabilities as bugs, and explain in the issue what the vulnerability is. Updates will be given as we assign team members to work on the issue and they make progress on it."
  },
  {
    "objectID": "posts/bug_report/index.html",
    "href": "posts/bug_report/index.html",
    "title": "Bug Report Template",
    "section": "",
    "text": "Describe the bug A clear and concise description of what the bug is.\nTo Reproduce Steps to reproduce the behavior: 1. Go to ‘…’ 2. Click on ‘….’ 3. Scroll down to ‘….’ 4. See error\nExpected behavior A clear and concise description of what you expected to happen.\nScreenshots If applicable, add screenshots to help explain your problem.\nDesktop (please complete the following information): - OS: [e.g. Windows] - Browser [e.g. Google, Firefox] - Version [e.g. Windows 11]\nAdditional context Add any other context about the problem here."
  },
  {
    "objectID": "posts/feature_request/index.html",
    "href": "posts/feature_request/index.html",
    "title": "Feature Request Template",
    "section": "",
    "text": "Is your feature request related to a problem? Please describe. A clear and concise description of what the problem is. Ex. I’m always frustrated when […]\nDescribe the solution you’d like A clear and concise description of what you want to happen.\nDescribe alternatives you’ve considered A clear and concise description of any alternative solutions or features you’ve considered.\nAdditional context Add any other context or screenshots about the feature request here."
  }
]